
FEEDBACK DA AVALIAÇÃO - Prova 1 - POO
═══════════════════════════════════════════════════════════
Aluno: StudentTwo SurnameTwo (fzampirolli3)
Data: 2025-09-14 21:27:34
Nota Final (de 1 tentativa): 75.00 pontos
Total de Chamadas à API: 1

## Análise do Código do Aluno

**QUESTAO_Q1: 20/25 -** O código implementa o padrão Singleton, mas com algumas falhas.

* ✅ **INSTÂNCIA ÚNICA:** O atributo `_instancia` estático e a verificação na criação de instâncias
garantem apenas uma instância.
* ✅ **MÉTODO DE ACESSO:** O método `__new__` atua como um método de acesso, retornando sempre a
mesma instância.
* ⚠️ **CONSTRUTOR PRIVADO/PROTEGIDO:** O construtor não é explicitamente privado, mas a
implementação do `__new__` impede a criação direta de instâncias.
* ✅ **EXECUÇÃO CORRETA:** O código executa sem erros de sintaxe.

**Sugestões de Melhoria:**

* Para maior clareza, o construtor poderia ser privado (`__init__`) e o método `__new__` poderia ser
mais explícito na verificação da instância.

**QUESTAO_Q2: 55/75 -** O código demonstra compreensão dos conceitos de herança, composição e
exceções, mas com algumas falhas.

* ✅ **CLASSE ABSTRATA BASE:** A classe `Curso` é abstrata e possui os atributos básicos.
* ✅ **MÉTODO ABSTRATO:** O método `calcular_carga_horaria` é abstrato e deve ser implementado pelas
subclasses.
* ✅ **HERANÇA CORRETA:** As classes `Graduacao` e `PosGraduacao` herdam de `Curso` e implementam o
método abstrato.
* ✅ **CLASSE AUXILIAR:** A classe `Disciplina` é uma classe auxiliar bem definida.
* ⚠️ **COMPOSIÇÃO/AGREGAÇÃO:** A composição/agregação não é implementada de forma ideal. A classe
`Curso` possui uma lista de nomes de disciplinas (`self.disciplinas`), mas não objetos `Disciplina`.
* ✅ **TRATAMENTO DE EXCEÇÕES:** O construtor de `Curso` trata a exceção de `duracao` negativa.
* ✅ **EXECUÇÃO CORRETA:** O código executa sem erros de sintaxe.

**Sugestões de Melhoria:**

* Implementar a composição/agregação de forma mais consistente, armazenando objetos `Disciplina` na
lista `self.disciplinas` em vez de apenas nomes.
* Adicionar mais testes para verificar a funcionalidade do código.



==================================================
📊 CORREÇÃO AUTOMÁTICA — Q1: 20 pontos (máx: 25)
📊 CORREÇÃO AUTOMÁTICA — Q2: 55 pontos (máx: 75)
==================================================


═══════════════════════════════════════════════════════════
Este feedback foi gerado automaticamente por IA e pode
necessitar de revisão pelo professor.
