
-Question 1:

Avalia√ß√£o: 0.900/1 (90.00%)

>Arquivo: Q1
>Escolhido: Q1.class
Q1.java
>Habilidades: 

Avalia√ß√£o: 90.00%
-Test 4: test_4 (-10.000)
Incorrect program output
 --- Input ---
>Atualiza√ß√£o dispon√≠vel
>listar

 --- Program output ---
>Central iniciada

 --- Expected output (text)---
>Central iniciada
>Nova notifica√ß√£o: Atualiza√ß√£o dispon√≠vel
>Notifica√ß√µes:
>Alerta de bateria
>Atualiza√ß√£o dispon√≠vel
>Atualiza√ß√£o dispon√≠vel

-Summary of tests
>+------------------------------+
>| 10 tests run/ 9 tests passed |
>+------------------------------+

-Question 2:

Avalia√ß√£o: 3.000/3 (100.00%)

>Arquivo: Q2
>Escolhido: Q2.class
Q2.java
>Habilidades: 

Avalia√ß√£o: 100.00%
-Summary of tests
>+------------------------------+
>| 10 tests run/10 tests passed |
>+------------------------------+

-Nota: 97.50

-üöÄ Feedback autom√°tico gerado por IA ‚ö†Ô∏è Revise com cuidado, pode conter erros!

‚ú® Voc√© est√° quase l√°!

üß≠ Confira as dicas a seguir para ajustar seu(s) c√≥digo(s):

=== IN√çCIO [ü§ñ modelo: llama-3.3-70b-versatile] ===

 Q1.java
1. A classe CentralNotificacoes est√° implementando o padr√£o de projeto Singleton, por√©m, o m√©todo getInstance est√° sendo chamado duas vezes no mesmo escopo, o que pode ser desnecess√°rio.
2. O m√©todo adicionar da classe CentralNotificacoes est√° adicionando notifica√ß√µes √† lista, mas n√£o est√° verificando se a notifica√ß√£o j√° existe antes de adicion√°-la.
3. O m√©todo main n√£o est√° fechando o BufferedReader ap√≥s o uso, o que pode causar problemas de recursos n√£o liberados.
4. O m√©todo main n√£o est√° tratando a exce√ß√£o IOException que pode ser lan√ßada pelo BufferedReader.

Q2.java
1. A classe Curso est√° sendo definida como abstract static, o que n√£o √© uma combina√ß√£o v√°lida em Java, pois as classes abstract n√£o podem ser static.
2. A classe Curso est√° lan√ßando uma exce√ß√£o ValueError, mas essa exce√ß√£o n√£o √© nativa em Java, √© uma exce√ß√£o do Python.
3. A classe Disciplina n√£o est√° sendo utilizada como deveria, pois n√£o est√° sendo herdada ou implementada por outras classes.
4. O m√©todo main n√£o est√° fechando o BufferedReader ap√≥s o uso, o que pode causar problemas de recursos n√£o liberados.
5. O m√©todo main n√£o est√° tratando a exce√ß√£o IOException que pode ser lan√ßada pelo BufferedReader.
6. O m√©todo main est√° utilizando um try-catch gen√©rico para tratar a exce√ß√£o ValueError, o que pode n√£o ser o melhor jeito de tratar exce√ß√µes espec√≠ficas.
7. A classe ValueError est√° sendo extendida de RuntimeException, mas n√£o est√° sendo utilizada como exce√ß√£o checking ou unchecked.

=== FIM [‚è∞  2025-08-27 09:09:22] ===
