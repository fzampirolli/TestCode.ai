
-Question 1:

Avalia√ß√£o: 1.000/1 (100.00%)

>Arquivo: Q1
>Escolhido: Q1.py
>Habilidades: 

Avalia√ß√£o: 100.00%
-Summary of tests
>+------------------------------+
>| 10 tests run/10 tests passed |
>+------------------------------+

-Question 2:

Avalia√ß√£o: 0.000/3 (0.00%)

>Arquivo: Q2
>Escolhido: Q2.py
>Habilidades: 

Avalia√ß√£o: 0.00%
-Failed tests
Test 1: test_1
Test 2: test_2
Test 3: test_3
Test 4: test_4
Test 5: test_5
Test 6: test_6
Test 7: test_7
Test 8: test_8
Test 9: test_9
Test 10: test_10
-Test 1: test_1 (-10.000)
Incorrect program output
 --- Input ---
>Ana; 7090.3; gerente
>Automa√ß√£o; API REST

 --- Program output ---
>Funcionario n√£o encontrado
>Erro: name 'funcionario' is not defined

 --- Expected output (text)---
>Gerente criado
>Bonus: 1489.0
>Projetos: Automa√ß√£o; API REST

-Test 2: test_2 (-10.000)
Incorrect program output
 --- Input ---
>Daniel; 4924.37; gerente
>Dashboard BI

 --- Program output ---
>Funcionario n√£o encontrado
>Erro: name 'funcionario' is not defined

 --- Expected output (text)---
>Gerente criado
>Bonus: 1034.1
>Projetos: Dashboard BI

-Test 3: test_3 (-10.000)
Incorrect program output
 --- Input ---
>Daniel; 2201.72; gerente
>Dashboard BI

 --- Program output ---
>Funcionario n√£o encontrado
>Erro: name 'funcionario' is not defined

 --- Expected output (text)---
>Gerente criado
>Bonus: 462.4
>Projetos: Dashboard BI

-Test 4: test_4 (-10.000)
Incorrect program output
 --- Input ---
>Bruno; 2142.55; desenvolvedor
>Dashboard BI; Sistema Web
>ProjetoInvalido

 --- Program output ---
>Funcionario n√£o encontrado
>Erro: name 'funcionario' is not defined

 --- Expected output (text)---
>Desenvolvedor criado
>Bonus: 235.7
>TypeError: Projeto inv√°lido
>Projetos: Dashboard BI; Sistema Web

-Test 5: test_5 (-10.000)
Incorrect program output
 --- Input ---
>Daniel; 3510.56; desenvolvedor
>Automa√ß√£o

 --- Program output ---
>Funcionario n√£o encontrado
>Erro: name 'funcionario' is not defined

 --- Expected output (text)---
>Desenvolvedor criado
>Bonus: 386.2
>Projetos: Automa√ß√£o

-Test 6: test_6 (-10.000)
Incorrect program output
 --- Input ---
>Bruno; 2552.86; gerente
>Automa√ß√£o

 --- Program output ---
>Funcionario n√£o encontrado
>Erro: name 'funcionario' is not defined

 --- Expected output (text)---
>Gerente criado
>Bonus: 536.1
>Projetos: Automa√ß√£o

-Test 7: test_7 (-10.000)
Incorrect program output
 --- Input ---
>Gabriela; 3811.13; gerente
>Banco de Dados

 --- Program output ---
>Funcionario n√£o encontrado
>Erro: name 'funcionario' is not defined

 --- Expected output (text)---
>Gerente criado
>Bonus: 800.3
>Projetos: Banco de Dados

-Test 8: test_8 (-10.000)
Incorrect program output
 --- Input ---
>Eva; 7963.61; gerente
>Automa√ß√£o

 --- Program output ---
>Funcionario n√£o encontrado
>Erro: name 'funcionario' is not defined

 --- Expected output (text)---
>Gerente criado
>Bonus: 1672.4
>Projetos: Automa√ß√£o

-Test 9: test_9 (-10.000)
Incorrect program output
 --- Input ---
>Bruno; 9274.21; desenvolvedor
>Aplicativo Mobile

 --- Program output ---
>Funcionario n√£o encontrado
>Erro: name 'funcionario' is not defined

 --- Expected output (text)---
>Desenvolvedor criado
>Bonus: 1020.2
>Projetos: Aplicativo Mobile

-Test 10: test_10 (-10.000)
Incorrect program output
 --- Input ---
>Eva; 6746.67; gerente
>Sistema Web; API REST

 --- Program output ---
>Funcionario n√£o encontrado
>Erro: name 'funcionario' is not defined

 --- Expected output (text)---
>Gerente criado
>Bonus: 1416.8
>Projetos: Sistema Web; API REST

-Summary of tests
>+------------------------------+
>| 10 tests run/ 0 tests passed |
>+------------------------------+

-Nota: 25.00

-üöÄ Feedback autom√°tico gerado por IA ‚ö†Ô∏è Revise com cuidado, pode conter erros!

‚ú® Voc√© est√° quase l√°!

üß≠ Confira as dicas a seguir para ajustar seu(s) c√≥digo(s):

=== IN√çCIO [ü§ñ modelo: meta-llama/llama-4-scout-17b-16e-instruct] ===

 **Q1.py**

1. A classe `SomSistema` implementa o padr√£o de projeto Singleton, mas n√£o h√° necessidade de utilizar `sys` como m√≥dulo importado.
2. O m√©todo `__new__` da classe `SomSistema` verifica se uma inst√¢ncia j√° existe e cria uma nova inst√¢ncia somente se necess√°rio.
3. Os m√©todos `tocar_som` e `som_atual` manipulam o atributo `somp` da inst√¢ncia.
4. O c√≥digo principal l√™ duas entradas do usu√°rio: uma para o som e outra para o comando.
5. O comando "tocar_som" chama o m√©todo `tocar_som` com a entrada como argumento.
6. O comando "som_atual" chama o m√©todo `som_atual`, mas antes chama `tocar_som` novamente com a entrada como argumento, o que n√£o faz sentido.
7. O comando "nova_instancia" cria uma nova inst√¢ncia de `SomSistema`, mas n√£o a utiliza.

Sugest√µes:

* Remover o import desnecess√°rio de `sys`.
* Corrigir o comando "som_atual" para n√£o chamar `tocar_som` novamente.
* Corrigir o comando "nova_instancia" para utilizar a nova inst√¢ncia.

**Q2.py**

1. A classe `Funcionario` √© uma classe abstrata com um atributo `nome`, `salario` e `listaprojetos`.
2. O m√©todo `__init__` da classe `Funcionario` verifica se o sal√°rio √© v√°lido e lan√ßa um `ValueError` se n√£o for.
3. O m√©todo `adicionar_projeto` adiciona um projeto √† lista de projetos do funcion√°rio.
4. As classes `Desenvolvedor` e `Gerente` herdam de `Funcionario` e implementam o m√©todo `calcular_bonus`.
5. A classe `Projeto` tem um atributo `nome`.
6. O c√≥digo principal l√™ entradas do usu√°rio e cria inst√¢ncias de `Funcionario` e `Projeto`.
7. O c√≥digo principal tamb√©m calcula e imprime o b√¥nus do funcion√°rio e a lista de projetos.

Sugest√µes:

* Verificar se o sal√°rio √© um n√∫mero v√°lido antes de converter para float.
* Tratar a exce√ß√£o de `ValueError` de forma mais espec√≠fica.
* Considerar a utiliza√ß√£o de um dicion√°rio para mapear os tipos de funcion√°rios.

=== FIM [‚è∞  2025-08-27 09:53:54] ===
